@using ElmanhagPlatform.ViewModels.CourseDetails;
@model CourseVM

@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@using System.Security.Claims
@using ElmanhagPlatform.Data
@inject AppDbContext _context

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    var user = _context.ApplicationUsers.Find(userId);
}

<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"> *@
    <link href="https://vjs.zencdn.net/7.15.4/video-js.css" rel="stylesheet">
    <script src="https://vjs.zencdn.net/7.15.4/video.min.js"></script>

    <title>@ViewData["Title"]</title>
    <style>
        .course-stats span {
            font-size: 1.2em;
            padding: 10px 20px;
            border-radius: 25px;
            margin: 5px;
        }

        .accordion-button {
            font-weight: bold;
            transition: background-color 0.3s ease, color 0.3s ease;
            display: flex;
            align-items: center;
        }

            .accordion-button .icon {
                margin-left: 10px;
                transition: transform 0.3s ease;
            }

            .accordion-button.open .icon {
                transform: rotate(180deg);
            }

            .accordion-button a {
                color: #fff;
                text-decoration: none;
                background-color: #007acc;
                padding: 5px 10px;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }

                .accordion-button a:hover {
                    background-color: #005f99;
                }

            .accordion-button::after {
                margin-left: 10px;
                transition: transform 0.3s ease;
            }

            .accordion-button.open::after {
                transform: rotate(360deg);
            }

        .backe {
            background-color: #FF6F20;
            color: black;
        }

        .collapse {
            display: none;
        }

            .collapse.show {
                display: block;
            }

        .lecture-btn {
            background-color: #007acc;
            color: #fff;
            border-color: #005f99;
            padding: 15px 30px;
            border-radius: 8px;
            transition: background-color 0.3s ease, color 0.3s ease;
            font-size: 1.0em;
        }

            .lecture-btn:hover {
                background-color: #005f99;
                color: #fff;
            }

        .lecture-collapse {
            background-color: #f0f8ff;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .lecture-btn.open {
            background-color: #005f99;
            color: #fff;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .video-btn {
            background-color: #e8f5e9;
            color: tomato;
            border-color: #a5d6a7;
            padding: 10px 20px;
            border-radius: 8px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .video-btn:hover {
                background-color: #c8e6c9;
                color: red;
            }

        .file-btn {
            background-color: #e3f2fd;
            color: #1565c0;
            border-color: #90caf9;
            padding: 10px 20px;
            border-radius: 8px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .file-btn:hover {
                background-color: #bbdefb;
                color: #0d47a1;
            }

        .exam-btn {
            background-color: #fff9c4;
            color: #0d47a1;
            border-color: #ffe082;
            padding: 10px 20px;
            border-radius: 8px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .exam-btn:hover {
                background-color: #fff59d;
                color: #f57f17;
            }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    </head>

    <body>
        <div class="container my-5">
            <div class="course-header text-center bg-warning p-5 rounded backe">
                <h1 style="color:blue">@Model.Name</h1>
                <p>@Model.Description</p>
                <div class="row g-1">
                    <div class="col-4">
                        <div class="border-top border-3 border-primary pt-2">
                            <p>تاريخ الإنشاء: @Model.CreationDate.ToString("dd/MM/yyyy")</p>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="border-top border-3 border-success pt-2">
                            <p>آخر تحديث: @Model.UpdateDate.ToString("dd/MM/yyyy")</p>
                        </div>
                    </div>
@*                     <div class="col-4">
                        <div class="border-top border-3 border-warning pt-2">
                            <a asp-action="Courses" asp-controller="Home" asp-route-id="@Model.teachId" asp-route-year="@Model.Year" class="btn btn-primary" style="color:yellow;">رجوع</a>
                        </div>
                    </div> *@
                </div>
            </div>

            <div class="course-stats text-center my-4">
                <span class="badge bg-primary p-3 m-2">الفيديوهات: @Model.VideosCount</span>
                <span class="badge bg-success p-3 m-2">الملفات: @Model.FilesCount</span>
                <span class="badge bg-danger p-3 m-2">الامتحانات: @Model.ExamsCount</span>
            </div>

            <div class="accordion" id="courseLectures">
                @if (Model.LecturesVM != null && Model.LecturesVM.Count > 0)
                {
                    foreach (var lecture in Model.LecturesVM)
                    {
                        var isSubscribed = _context.StudentCourses.Any(c => c.StudentId == userId && c.CourseId == lecture.CourseId);
                        var lectureSubscribed = _context.Cards.Any(c => c.StudentId == userId && c.LectureId == lecture.Id);

                        <div class="accordion-item">
                            <h2 class="accordion-header" id="heading@lecture.Id">
                                <div class="d-flex justify-content-between align-items-center">
                                    <button class="accordion-button lecture-btn" type="button"
                                        onclick="toggleCollapse('collapse@(@lecture.Id)',
                                            '@isSubscribed.ToString().ToLower()',
                                            '@lectureSubscribed.ToString().ToLower()')">
                                        <i class="fas fa-book icon"></i> @lecture.Name
                                    </button>
                                    @if (lectureSubscribed == false && isSubscribed == false && user != null)
                                    {
                                        <a type="button" class="btn btn-primary ml-auto" style="color:yellow;"
                                           data-bs-toggle="modal" data-bs-target="#ModalUser_@lecture.Id">
                                            <small>اشترك الان!</small>
                                        </a>
                                    }
                                    else if (user == null)
                                    {
                                        <form id="form" class="d-flex align-items-center position-relative ">
                                            @if (!SignInManager.IsSignedIn(User))
                                            {
                                                <a asp-action="Create" asp-controller="Student" class="btn btn-primary rounded-pill py-sm-3 px-sm-5 me-3 animated slideInLeft">اشترك الان!</a>
                                            }
                                        </form>
                                    }
                            </div>
                            </h2>
                            <div id="collapse@(@lecture.Id)" class="collapse lecture-collapse">
                                <div class="accordion-body">
                                    <p><strong style="color: black;">محتوى المحاضرة:</strong></p>
                                    <p style="color: black;">@lecture.Content</p>

                                    <!-- الفيديوهات -->
                                    @if (lecture.VideosVM != null && lecture.VideosVM.Count > 0)
                                    {
                                        <h5 class="mt-3" style="color: red;"><i class="fas fa-video"></i> الفيديوهات:</h5>
                                        <div class="accordion" id="videoAccordion@lecture.Id">
                                            @foreach (var video in lecture.VideosVM)
                                            {
                                                <div class="accordion-item">
                                                    <h2 class="accordion-header" id="videoHeading@lecture.Id-@video.Id">
                                                        <button class="accordion-button video-btn" type="button"  onclick="toggleCollapse2('videoCollapse@(@lecture.Id)-@(@video.Id)')">
                                                            <i class="fas fa-play icon"></i> @video.Name
                                                        </button>
                                                    </h2>
                                                    <div id="videoCollapse@(@lecture.Id)-@(@video.Id)" class="collapse inner-collapse">
                                                        <div class="accordion-body">
                                                            <p><strong style="color: blue;"><strong>الوصف:</strong> <span style="color: black;">@video.Description</span></p>

                                                            @{
                                                                var watchingLogs = ViewBag.Watchinglog as List<ElmanhagPlatform.Models.VideoWatchLog>;
                                                                var logEntry = watchingLogs?.FirstOrDefault(v => v.VideoId == video.Id);
                                                                var watchCount = logEntry != null ? logEntry.WatchCount : 0;
                                                                var minutesCount = logEntry != null ? logEntry.TotalMinutesWatched : 0;
                                                            }

                                                            <p style="color: blue;"><strong>عدد المشاهدات:</strong> <span style="color: black;">@watchCount</span></p>
                                                            <p style="color: blue"><strong>دقائق المشاهدة الكلية:</strong> <span style="color: black;">@minutesCount</span></p>

                                                            <a asp-action="WatchVideo" asp-controller="Home" asp-route-videoId="@video.Id" class="btn btn-primary" style="color:yellow;">مشاهدة الفيديو</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p style="color: black;">لا توجد فيديوهات لهذه المحاضرة.</p>
                                    }

                                    <!-- الامتحانات -->
                                    @if (lecture.ExamsVM != null && lecture.ExamsVM.Count > 0)
                                    {
                                        <h5 class="mt-3" style="color: red;"><i class="fas fa-file-alt"></i> الامتحانات:</h5>
                                        <div class="accordion" id="examAccordion@lecture.Id">
                                            @foreach (var exam in lecture.ExamsVM)
                                            {
                                                <div class="accordion-item">
                                                    <h2 class="accordion-header" id="examHeading@lecture.Id-@exam.Id">
                                                        <button class="accordion-button exam-btn" type="button" onclick="toggleCollapse2('examCollapse@(@lecture.Id)-@(@exam.Id)')">
                                                            <i class="fas fa-tasks icon"></i> @exam.Name
                                                        </button>
                                                    </h2>
                                                    <div id="examCollapse@(@lecture.Id)-@(@exam.Id)" class="collapse inner-collapse">
                                                        <div class="accordion-body">
                                                            <strong style="color: blue;">الوصف:</strong><span style="color: black;"> @exam.Description</span> <br />
                                                            <p><strong style="color: blue;">مدة الامتحان:</strong><span style="color: black;"> @exam.Duration دقيقة</span></p>
                                                            @{
                                                                var Grades = ViewBag.ExamesSol as List<ElmanhagPlatform.Models.ExamAnswer>;
                                                                var SolCount = Grades?.Where(v => v.ExamId == exam.Id).Count();
                                                                var sol = SolCount != null ? SolCount : 0;
                                                                var grade = Grades?.Where(v => v.ExamId == exam.Id).ToList();
                                                                var totalQuestions = exam.Questions != null ? exam.Questions.Count : 0;
                                                                <p><strong style="color: blue;">عدد مرات دخول الامتحان:</strong><span style="color: black;"> @sol</span></p>
                                                                if (SolCount != null)
                                                                {
                                                                    <h6 class="mt-3" style="color: green;"><i class="fas fa-file-alt"></i> الحلول:</h6>
                                                                    @foreach (var ans in grade)
                                                                    {
                                                                        var correctAnswersCount = ans.Results.Where(res => res.Answer == res.Question.CorrectAnswer).Count();
                                                                        var percentage = (correctAnswersCount / (double)totalQuestions) * 100;
                                                                        <div class="row g-1">
                                                                            <div class="col-4">
                                                                                <div>
                                                                                    <p><strong style="color: blue;">النسبة المئوية:</strong><span style="color: black;"> @Math.Round(percentage, 2)%</span></p>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-4">
                                                                                <div>
                                                                                    <a asp-action="ShowResult" asp-controller="Home" asp-route-examAnswerId="@ans.Id" class="btn" style="background-color:green; color: white;">
                                                                                        <i class="fas fa-eye"></i> عرض الإجابات
                                                                                    </a>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                }
                                                            }
                                                            <a asp-action="StartExam" asp-controller="Home" asp-route-id="@exam.Id" class="btn btn-primary" style="color:yellow;">بدأ الامتحان</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p style="color: black;">لا توجد امتحانات لهذه المحاضرة.</p>
                                    }

                                    <!-- الملفات -->
                                    @if (lecture.PFilesVM != null && lecture.PFilesVM.Count > 0)
                                    {
                                        <h5 class="mt-3" style="color: red;"><i class="fas fa-file"></i> الملفات:</h5>
                                        <div class="accordion" id="fileAccordion@lecture.Id">
                                            @foreach (var file in lecture.PFilesVM)
                                            {
                                                <div class="accordion-item">
                                                    <h2 class="accordion-header" id="fileHeading@lecture.Id-@file.Id">
                                                        <button class="accordion-button file-btn" type="button" onclick="toggleCollapse2('fileCollapse@(@lecture.Id)-@(@file.Id)')">
                                                            <i class="fas fa-file-alt icon"></i> @file.Name
                                                        </button>
                                                    </h2>
                                                    <div id="fileCollapse@(@lecture.Id)-@(@file.Id)" class="collapse inner-collapse">
                                                        <div class="accordion-body">
                                                            <p style="color: blue;"><strong>الوصف:</strong><span style="color: black;"> @file.Description</span></p> <br />
                                                            <a href="~/files/@file.FilePath" class="btn btn-primary" style="color:yellow;" target="_blank">عرض الملف</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p style="color: black;">لا توجد ملفات لهذه المحاضرة.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p style="color: black;">لا توجد محاضرات متاحة لهذا الكورس.</p>
                }
            </div>
        </div>

        @foreach (var lecture in Model.LecturesVM)
        {
            <div class="modal fade" id="ModalUser_@lecture.Id" tabindex="-1" role="dialog" aria-labelledby="ModalTitle_@lecture.Id" aria-hidden="true">
                <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header bg-primary text-white">
                            <h5 class="modal-title" id="ModalTitle_@lecture.Id">الاشتراك باستخدام الكود</h5>
                        </div>
                        <div class="modal-body">
                            <div class="form-layout">
                                @if(user != null && user.RechargedCard >= 5){
                                    <div class="alert alert-info text-center">
                                        <span>لقد تجاوزت العدد المسموح به للمحاولات الخاطئة اذهب لمدير المنصة لاتمام الاشتراك</span>
                                    </div>
                                }
                                else if (user != null && (user.RechargedCard == null|| user.RechargedCard < 5))
                                {
                                    <form id="addTableForm_@lecture.Id" method="post" asp-action="AddCard" asp-controller="Card" enctype="multipart/form-data" onsubmit="return validateContentLength(this)">
                                        <div class="alert alert-info text-center">
                                            <div class="form-group">
                                                <input id="contentInput_@lecture.Id" name="content" autocomplete="on" aria-required="true" type="text" class="form-control" placeholder="اكتب الكود" onfocus="this.placeholder = ''" onblur="this.placeholder ='اكتب الكود'">
                                                <span class="text-danger" id="validationMessage_@lecture.Id"></span>
                                            </div>
                                        </div>
                                        <input type="hidden" name="id" value="@lecture.Id" />
                                        <div class="text-center mt-4">
                                            <button type="submit" class="btn btn-success btn-lg px-5">
                                                <i class="fas fa-check-circle"></i> تأكيد
                                            </button>
                                        </div>
                                    </form>
                                }
                                else
                                {
                                    <form id="form" class="d-flex align-items-center position-relative ">
                                        @if (!SignInManager.IsSignedIn(User))
                                        {
                                            <a asp-action="Create" asp-controller="Student" class="btn btn-primary rounded-pill py-sm-3 px-sm-5 me-3 animated slideInLeft">اشترك الان!</a>
                                        }
                                    </form>
                                }
                            </div>
                        </div>
                        <!-- Footer -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                        </div>
                    </div>
                </div>
            </div>
        }

@*         @if (TempData["AlertMessage"] != null)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                @TempData["AlertMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        } *@

        <input type="hidden" id="created" data-value="@ViewBag.created" />
        <input type="hidden" id="updated" data-value="@ViewBag.updated" />

        @section scripts {
            <link href="~/lib/toaster/toaster.css" rel="stylesheet" />
            <script src="~/lib/toaster/toaster.js"></script>

            <script type="text/javascript">
                $(document).ready(function () {
                    var created = $("#created").data("value");
                    if (created == "True") {
                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": true,
                            "positionClass": "toast-top-left",
                            "preventDuplicates": true,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "12000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        toastr.success("تم ارسال الاجابات اعرف درجتك الان وشاهد الحل الصحيح");
                    }

                    var updated = $("#updated").data("value");
                    if (updated == "True") {
                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": true,
                            "positionClass": "toast-top-left",
                            "preventDuplicates": true,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "12000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        toastr.success("تم الاشتراك في المحاضرة بنجاح");
                    }
                });
            </script>
            <script>
                function toggleCollapse(id, isSubscribed, lectureSubscribed) {
                    isSubscribed = (isSubscribed === 'true');
                    lectureSubscribed = (lectureSubscribed === 'true');

                    if (!isSubscribed && !lectureSubscribed) {
                        alert("عذرًا، يجب أن تكون مشتركًا لمشاهدة المحاضرة.");
                        return;
                    }

                    const element = document.getElementById(id);
                    if (!element) return;

                    element.classList.toggle('show');

                    const button = element.previousElementSibling.querySelector('.accordion-button');
                    if (button) {
                        button.classList.toggle('open');
                        element.classList.toggle('lecture-collapse');
                    }
                }
            </script>
            <script>
                function toggleCollapse2(id) {
                    const element = document.getElementById(id);
                    if (!element) return;

                    element.classList.toggle('show');

                    const button = element.previousElementSibling.querySelector('.accordion-button');
                    if (button) {
                        button.classList.toggle('open');
                        element.classList.toggle('lecture-collapse');
                    }
                }
            </script>
            <script>
                function validateContentLength(form) {
                    const contentInput = form.querySelector('input[name="content"]');
                    const validationMessage = form.querySelector('.text-danger');

                    if (contentInput.value.length !== 16) {
                        validationMessage.textContent = "الكود يجب أن يتكون من 16 حرفًا.";
                        return false;
                    }

                    validationMessage.textContent = "";
                    return true;
                }
            </script>
            <script>
                document.addEventListener('DOMContentLoaded', (event) => {
                    var alertMessage = '@Html.Raw(TempData["AlertMessage"])';
                    if (alertMessage) {
                        alert(alertMessage);
                    }
                });
            </script>
        }
    </body>
</html>